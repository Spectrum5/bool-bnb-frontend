@use './variables.scss' as *;

@mixin flexSpaceBtwn ($gap: 0) {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: $gap;
}

@mixin flexRowCenter ($gap: 0) {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: $gap;
}

@mixin flexStart ($gap: 0) {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: $gap;
}


@mixin largeContainer {
    max-width: 1760px;
    margin: 0 auto;
}

@mixin cardsContainer ($gap: 0) {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: $gap;

    >.card {
        width: 260px;
    }
}

@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin customShadow {
    box-shadow: 0px 4px 16px 1px #00000060;
}

@mixin customOutline {
    outline-style: solid;
    outline-color: $color-three-dark;
    outline-offset: 2px;
    outline-width: 0px;

    transition: outline-width 0.05s, outline-color 0.03s;

    &:hover,
    &:focus-visible {
        outline-width: 2px;
    }

    &:active {
        outline-color: $color-three-light;
    }
}

// MEDIA QUERY

$layout-breakpoint-x-small: 576px;
$layout-breakpoint-small: 576px;
$layout-breakpoint-medium: 768px;

@mixin for-phone {
    @media (max-width: 599px) {
        @content;
    }
}

@mixin for-tablet-up {
    @media (max-width: 600px) {
        @content;
    }
}

@mixin for-tablet-landscape-up {
    @media (min-width: 900px) {
        @content;
    }
}

@mixin for-desktop-up {
    @media (min-width: 900px) {
        @content;
    }
}


@mixin for-big-desktop {
    @media (min-width: 1800px) {
        @content;
    }
}

@mixin customButton ($palette: primary, $colorA: $light-color-one, $colorB: $color-one-dark, $colorC: $color-one-light) {
    @include customOutline;
    font-size: 1rem;
    font-weight: 600;
    text-transform: capitalize;
    text-decoration: none;
    line-height: 1rem;

    display: inline-block;
    padding: 12px 16px;
    border: none;
    background: none;
    border-radius: 10px;

    cursor: pointer;
    user-select: none;
    transition: all 0.05s;

    @if $palette == primary {
        $colorB: $color-one-dark;
        $colorC: $color-two-dark;
    }

    @else if $palette == success {
        $colorB: $success-color-dark;
        $colorC: $success-color-light;
    }
    
    @else if $palette == warning {
        $colorB: $warning-color-dark;
        $colorC: $warning-color-light;
    }
    
    @else if $palette == danger {
        $colorB: $danger-color-dark;
        $colorC: $danger-color-light;
    }

    &.solid {
        color: $colorA;
        background: linear-gradient(45deg, $colorB, $colorC);

        &:hover {
            background: linear-gradient(60deg, $colorB 40%, $colorC);
        }
    }

    &.line {
        color: $colorB;
        box-shadow: inset 0px 0px 0px 2px $colorB;

        &:hover {
            background: linear-gradient(45deg, $colorB, $colorC);
            color: $colorA;
        }
    }

    .icon {
        margin-right: 0.5rem;
    }
}